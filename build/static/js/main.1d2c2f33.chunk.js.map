{"version":3,"sources":["panels/Intro.js","media/IQAir_logo.svg","media/loader.gif","bricks/Loader.tsx","bricks/ListItem.tsx","bricks/Tooltip.tsx","bricks/PollutionItem.tsx","bricks/Badge.tsx","utils/getDayOfWeek.ts","bricks/WeatherItem.tsx","media/mask.svg","media/window.svg","media/score_high.svg","media/score_low.svg","bricks/Advice.tsx","utils/pollutants.ts","dal/api.ts","media/station.svg","bricks/StationItem.tsx","utils/getDistance.ts","panels/Home.tsx","panels/ForecastPollutionForDay.tsx","bricks/PlaceItem.tsx","utils/isKrym.ts","panels/PollutionCities.tsx","panels/MyCities.tsx","bricks/MySnackbar.tsx","media/place.svg","media/chevron_right.svg","media/bg_okay.jpg","media/bg_good.jpg","media/bg_good.svg","media/bg_bad.jpg","panels/TurnNoticifications.tsx","bll/Selectors/initialSelector.ts","bll/Reducers/initialReducer.ts","bll/store.ts","utils/internetConnection.ts","panels/NotConnection.tsx","media/wifi_outline_56.svg","App.js","utils/initialVkBridge.ts","index.js"],"names":["LIGHT_BLUE","Intro","id","bgApp","handlerClose","checkInfo","requestPermissionLocation","onClose","header","className","Icon","Icon28NarrativeOutline","description","title","Icon28Notifications","Icon28StoryOutline","size","onClick","style","background","before","paddingTop","paddingBottom","InfoBlock","fill","Loader","props","src","loader","ListItem","memo","display","color","paddingRight","paddingLeft","children","Tooltip","tooltipDescription","tooltip","padding","margin","PollutionItem","value","bar","aqi","useState","isOpen","setOpen","isClosed","setClosed","useEffect","setTimeout","fontSize","overflow","max","justifyContent","height","marginLeft","Badge","getDayOfWeek","day","dayOfWeek","WeatherItem","mode","disabled","after","Advice","isGoodWind","pollution","doStory","score_low","score_high","mask","separator","windows","width","windowSVG","exercice","getFullNamePollutant","toUpperCase","getDescriptionPollutant","instance","axios","create","baseURL","getEcoSearchData","searchQ","post","window","location","search","then","res","data","catch","e","response","getEcologyCity","cityId","target","getCityByCoordinate","lat","long","get","StationItem","stationName","distance","stationPNG","marginRight","overflowX","innerWidth","getDistance","point1","point2","P","Math","PI","latitude","longitude","String","slice","Home","snackbar","city","go","isInit","nativeCityId","isCitySubscribed","subscribeNoticification","unsubsubscribeNoticification","isShowMore","setShowMore","isShowBigImage","setShowBigImage","stations","setStations","name","goToForecastPollutionForTheDay","stationsJSX","map","c","index","coordinates","length","pollutantsJSX","current","pollutants","p","pollutantName","concentration","currentDay","Date","getDay","forecastsJSX","forecasts","daily","temperature","flexDirection","position","zIndex","fontWeight","lineHeight","marginTop","opacity","backgroundColor","shadow","recommendations","borderRadius","gridTemplateColumns","gridGap","logo","ForecastPollutionForDay","month","right","settlingHeight","PlaceItem","country","bg","setBG","some","k","PollutionCities","countryId","setDefaultCity","countryName","myCity","myCityId","isAllowedPlace","setTitle","cities","setCities","clearestCities","setClearestCitites","isFetching","setFetching","getEcoRankCity","citiesJSX","clearestCitiesJSX","onChange","BgInitClearestCities","items","BgInitCities","MyCities","handleClose","cityFromSearch","cityOfUser","setCitySearch","toHome","MySnackbar","text","resultOperation","closeHandler","success_img","failed_img","TurnNoticifications","icon","subheader","actions","bgAppSelector","state","initial","platformSelector","platform","activePanelSelector","activePanel","activeModalSelector","activeModal","SET_PLATFORM","SET_BG_APP","SET_ACTIVE_PANEL","SET_ACTIVE_MODAL","initialState","setActivePanelState","type","setActiveModalState","setPlatform","setBgApp","reducers","combineReducers","action","store","createStore","dispatch","toOnline","NotConnection","image","useDispatch","setSnackbar","innerHeight","border","navigator","onLine","ROUTES","STATE_KEYS","IS_CHECK_INFO","IS_ALLOWED_PLACE","DEFAULT_CITY_ID","DEFAULT_COUNTRY_NAME","DEFAULT_COUNTRY_ID","PlaceImage","x","useImage","placePNG","y","ChevronRight","chevron_right","App","setInit","useSelector","popout","setActiveModal","modal","isCheckInfo","defaultCityId","defaultCountryId","ecoCity","nativeCity","subscribedCities","defaultCountryName","setState","handlerCloseModal","fetchData","a","bridge","send","keys","Object","values","forEach","s","JSON","parse","key","prev","idCountry","defaultNameCountry","cityName","currentCity","item","countries","handlerLocationHashChange","hash","stringify","ref","useRef","refBg","React","useCallback","background_type","blob","toDataURL","closeSnackbarHandler","result","subscribeNoticificationForButton","unsubsubscribeNoticificationForButton","delete","filter","onClickMyCities","wifiImage","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","cornerRadius","fontFamily","subscribeVkBridge","subscribe","detail","schemeAttribute","document","createAttribute","scheme","RegExp","match","href","body","attributes","setNamedItem","addEventListener","AppContainer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1d2c2f33.chunk.js","sourcesContent":["import { Div, Spacing, FixedLayout, Group, ModalPage, PanelHeaderClose, ModalPageHeader, Panel, useAdaptivity, ViewWidth, usePlatform, Button, Cell } from \"@vkontakte/vkui\"\r\nimport React,{ Fragment } from \"react\"\r\nimport './Intro.css'\r\nimport { Icon28NarrativeOutline } from '@vkontakte/icons';\r\nimport { Icon28Notifications } from '@vkontakte/icons';\r\nimport { Icon28StoryOutline } from '@vkontakte/icons';\r\nimport { Icon24LocationOutline } from '@vkontakte/icons';\r\n\r\n\r\nconst LIGHT_BLUE = '#4475F1'\r\n\r\nexport const Intro=({id,bgApp,handlerClose,checkInfo,requestPermissionLocation})=>{\r\n    \r\n    \r\n\r\n    return<ModalPage\r\n    id={id}      \r\n    onClose={handlerClose}\r\n    header={\r\n            <ModalPageHeader\r\n            className={bgApp==='bg__app__light' ? 'modal__app__light' : 'modal__app__dark'}\r\n            ></ModalPageHeader>\r\n    }>\r\n        <div className={bgApp}>\r\n        <Fragment>\r\n            <Group>\r\n                <Div className='center__x text__big'>\r\n                    Добро пожаловать в Purify\r\n                </Div>\r\n                <Div>\r\n                    <InfoBlock \r\n                    Icon={Icon28NarrativeOutline}\r\n                    description={'Просматривайте актуальную статистику и получайте важные советы, чтобы сберечь здоровье. '}\r\n                    title={'Следите за качеством воздуха'} />\r\n                    <InfoBlock \r\n                    Icon={Icon28Notifications}\r\n                    description={'Получайте уведомления, чтобы заранее знать об изменениях в худшую сторону.'}\r\n                    title={'Будьте в курсе'}\r\n                    />\r\n                    <InfoBlock \r\n                    Icon={Icon28StoryOutline}\r\n                    description={'Информируйте их в критических ситуациях через истории ВКонтакте.'}\r\n                    title={'Сообщайте близким'}\r\n                    />\r\n                </Div>\r\n            </Group>\r\n            <Div\r\n            className='center__x'\r\n            >\r\n                <Button  \r\n                size='l'\r\n                onClick={requestPermissionLocation}\r\n                className='intro__button__location'\r\n                style={{background:LIGHT_BLUE}}\r\n                before={<Icon24LocationOutline/>}>\r\n                  Разрешить доступ к местоположению  \r\n                </Button>\r\n            </Div>\r\n            <div\r\n            onClick={()=>{\r\n                checkInfo()\r\n            }}\r\n            style={{paddingTop:15,paddingBottom:15}}\r\n            className='w-100 highlight_on_touch center__x text__gray'\r\n            >\r\n                Пропустить\r\n            </div>\r\n            <Spacing size={80}/>\r\n        </Fragment>\r\n        </div>\r\n    </ModalPage>\r\n}\r\n\r\nexport const InfoBlock=({description, title, Icon})=>{\r\n    return<Div className='intro__info'>\r\n    <div className='center__y'>\r\n        <Icon fill={LIGHT_BLUE}/>\r\n    </div>\r\n    <Div>\r\n        <div>\r\n            <strong>{title}</strong>\r\n        </div>\r\n        <div className='text__gray'>\r\n            {description}\r\n        </div>\r\n    </Div>\r\n</Div>\r\n}","export default __webpack_public_path__ + \"static/media/IQAir_logo.60893679.svg\";","export default __webpack_public_path__ + \"static/media/loader.4eb6b9ea.gif\";","//@ts-ignore\r\nimport loader from \"../media/loader.gif\";\r\n\r\ntype PropsType={}\r\n\r\nexport const Loader:React.FC<PropsType>=(props)=>{\r\n    return<img className='w-100' src={loader} />\r\n}","import { ElementType, JSXElementConstructor, memo, ReactElement } from \"react\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    description: string | ReactElement<any, any>,\r\n    className?: string,\r\n    bgApp: string,\r\n    onClick?: ()=>void\r\n}\r\n\r\n\r\nexport const ListItem:React.FC<PropsType> = memo(({ description, onClick, className, bgApp, ...props }) => {\r\n    return <div className=''\r\n        onClick = {onClick ? onClick : ()=>{}} \r\n        style={{ display: 'flex', color: (bgApp==='bg__app__light' ? '#454545' : 'white') }}>\r\n        <div className={className ? className :'center__y'}\r\n        style={{paddingRight: 16, paddingLeft:8}}\r\n        >\r\n            {props.children}\r\n        </div>\r\n        <div className='center__y'> \r\n            {description}\r\n        </div>\r\n    </div>\r\n})","\r\nimport './Tooltip.css'\r\n\r\n\r\n\r\ntype PropsType={\r\n    tooltipDescription: string\r\n}\r\n\r\nexport const Tooltip:React.FC<PropsType> = ({tooltipDescription,children}) =>{\r\n    //@ts-ignore\r\n    return<div tooltip={tooltipDescription} tooltip-position={'bottom'}\r\n    style={{padding:0,margin:0}}>\r\n        {children}\r\n    </div>\r\n}","import { Icon20Info } from \"@vkontakte/icons\"\r\nimport {Tooltip} from './Tooltip'\r\nimport React, { memo, useEffect, useState } from \"react\"\r\n\r\n\r\n\r\ntype PropsType = {\r\n    title: string,\r\n    value: number,\r\n    tooltipDescription: string,\r\n    bar: string,\r\n    aqi?: number,\r\n    bgApp: string\r\n}\r\n\r\nexport const PollutionItem: React.FC<PropsType> = memo(({ title, value, tooltipDescription, bar, aqi, bgApp }) => {\r\n\r\n    let [isOpen, setOpen] = useState(false)\r\n    let [isClosed, setClosed] = useState(false)\r\n\r\n    const showTooltip = () => {\r\n        setOpen(true)\r\n        /*setTimeout(() => {\r\n            setShow(false)\r\n        }, 4000)*/\r\n    }\r\n    useEffect(()=>{\r\n        if(isOpen){\r\n            setTimeout(()=>{\r\n                setClosed(true)\r\n                setOpen(false)\r\n                setClosed(false)\r\n            },3000)\r\n        }\r\n        return()=>{\r\n            setClosed(true)\r\n            setClosed(false)\r\n        }\r\n    },[isOpen])\r\n\r\n    return <div\r\n        style={{paddingRight:4,paddingLeft:4, color:bgApp==='bg__app__light' ? '#454545' : 'white'}}\r\n        className='w-100 pollution__item'>\r\n        <div style={{fontSize:16,overflow:'hidden'}} >\r\n            {title}\r\n        </div>\r\n        <div className='center__y'>\r\n            <progress className={bar} value={aqi ? aqi : value } max={100}/>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'end'}}>\r\n            <div className='text__gray' style={{fontSize:14,height:20,overflow:'hidden'}}>\r\n                {value}  μm<sup>3</sup>\r\n            </div>\r\n            <div onClick={(!isClosed) ? showTooltip : ()=>{}} style={{marginLeft:3}}>\r\n                {(!isClosed) && <Tooltip tooltipDescription={tooltipDescription}>\r\n                    <Icon20Info fill='#C1C1C1' />\r\n                </Tooltip>}\r\n                {(isClosed) && <Tooltip tooltipDescription={tooltipDescription}>\r\n                <Icon20Info fill='#C1C1C1' />\r\n                    </Tooltip>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n})\r\n","import React, { memo } from \"react\";\r\n\r\n\r\ntype PropsType={\r\n    value: any,\r\n    color: string,\r\n    style?: any\r\n}\r\n\r\nexport const Badge:React.FC<PropsType> = memo(({value,color,style}) =>{\r\n\r\n    return<span {...style} className={'badge' + ' ' + color } >\r\n        {value}\r\n    </span>\r\n})","\r\n\r\n\r\nexport const getDayOfWeek=(day:number):string=>{\r\n    const week = [\r\n        'Понедельник',\r\n        'Вторник',\r\n        'Среда',\r\n        'Четверг',\r\n        'Пятница',\r\n        'Суббота',\r\n        'Воскресенье'\r\n    ]\r\n    let dayOfWeek = day\r\n    while (dayOfWeek>7){\r\n        dayOfWeek = dayOfWeek -7\r\n    }\r\n        \r\n    return week[dayOfWeek-1]\r\n}","import { Icon24ChevronCompactRight, Icon24ErrorCircle } from \"@vkontakte/icons\"\r\nimport { Cell } from \"@vkontakte/vkui\"\r\nimport React, { memo } from \"react\"\r\nimport {Badge} from './Badge'\r\nimport {getDayOfWeek} from '../utils/getDayOfWeek'\r\n\r\n\r\ntype PropsType={\r\n    day: number,\r\n    value: any,\r\n    mode: 'danger' | 'okay' | 'good',\r\n    onClick: ()=>void\r\n}\r\n\r\nexport const WeatherItem:React.FC<PropsType>=memo(({day, value, mode, onClick})=>{\r\n    const color='bg__'+mode\r\n    return<div style={{fontSize:16, color:'#454545'}} className='w-100'>\r\n        <Cell\r\n        disabled={true}\r\n        after={<div>\r\n        <Badge value={value}  color={color} />\r\n        {/*<Icon24ChevronCompactRight fill='#C1C1C1' />*/}\r\n        </div>\r\n        }\r\n        before={mode==='danger' && <Icon24ErrorCircle fill={'#EF462F'}/>} >\r\n        <div>\r\n            <div className='center__y'>\r\n            {getDayOfWeek(day)}\r\n            </div>\r\n        </div>\r\n        </Cell>\r\n    </div>\r\n})","export default __webpack_public_path__ + \"static/media/mask.ca4eeaf1.svg\";","export default __webpack_public_path__ + \"static/media/window.8eeb1d1b.svg\";","export default __webpack_public_path__ + \"static/media/score_high.8b2dd071.svg\";","export default __webpack_public_path__ + \"static/media/score_low.272815f5.svg\";","import { Card, Spacing } from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n//@ts-ignore\r\nimport mask from '../media/mask.svg'\r\n//@ts-ignore\r\nimport windowSVG from '../media/window.svg'\r\n//@ts-ignore\r\nimport score_high from '../media/score_high.svg'\r\n//@ts-ignore\r\nimport score_low from '../media/score_low.svg'\r\nimport { ListItem } from \"./ListItem\";\r\nimport { Icon28LikeOutline, Icon28StoryOutline } from \"@vkontakte/icons\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    pollution: {\r\n        exercice: {\r\n            value: string;\r\n            text: string;\r\n        };\r\n        windows: {\r\n            value: string;\r\n            text: string;\r\n        };\r\n        mask: {\r\n            value: string;\r\n        };\r\n        air_purifier: {\r\n            value: string;\r\n        };\r\n    };\r\n    isGoodWind: boolean,\r\n    bgApp: string,\r\n    doStory: ()=>void\r\n};\r\n\r\nconst LIGHT_BLUE = '#4475F1'\r\n\r\nexport const Advice:React.FC<PropsType> = ({isGoodWind,pollution,bgApp, doStory}) =>{\r\n    return<Card\r\n    mode=\"shadow\"\r\n    className='card__app'>\r\n       <div>\r\n            <div style={{marginLeft:3.5}}>\r\n           <ListItem bgApp={bgApp} description={isGoodWind ? 'Качество воздуха хорошее и соответствует требованиям ООН. Наслаждайтесь.' : <span>Качество воздуха плохое и превышает требования ООН.</span>}>\r\n               {isGoodWind ? <img src={score_low} /> : \r\n               <img src={score_high} />}\r\n           </ListItem>\r\n            </div>\r\n           {(pollution.mask.value!=='green' && pollution.mask.value!=='hidden') && <><Spacing className=\"spacing\" size={32} separator />\r\n            <ListItem bgApp={bgApp} description={'Носите маску на улице.'}>\r\n               <img src={mask} />\r\n           </ListItem></>}\r\n           {pollution.windows.value!=='hidden' && <><Spacing size={32} separator className=\"spacing\" />\r\n            <ListItem bgApp={bgApp} description={pollution.windows.value!=='green' ? 'Закройте окна.' : 'Откройте окна и проветрите помещение свежим воздухом.'}>\r\n               <div style={{width:28}} className='center__x'>\r\n               <img src={windowSVG} />\r\n               </div>\r\n           </ListItem></>}\r\n           {(pollution.exercice.value!=='hidden') && <><Spacing size={32} className=\"spacing\" separator />\r\n           <ListItem bgApp={bgApp} description={pollution.exercice.value!=='green' ? 'Избегайте нагрузок на улице.' : 'Хорошее время для тренировки.'}>\r\n               <Icon28LikeOutline fill={LIGHT_BLUE} />\r\n           </ListItem></>}\r\n           <>\r\n           <Spacing className=\"spacing\" size={32} separator />\r\n           <ListItem\r\n           onClick={doStory}\r\n           bgApp={bgApp} description={<div style={{color:LIGHT_BLUE}}><div>Сообщите друзьям и близким</div><div>Поделитесь историей</div></div>}>\r\n                <Icon28StoryOutline fill={LIGHT_BLUE} />\r\n            </ListItem>\r\n            </>\r\n       </div>\r\n</Card>\r\n}","\r\n\r\n\r\n\r\nexport const getFullNamePollutant=(title:string)=>{\r\n    switch (title) {\r\n        case 'pm25':\r\n            return 'PM2.5'\r\n        case 'pm10':\r\n            return 'PM10'\r\n        case 'o3':\r\n            return 'O3'\r\n        case 'no2':\r\n            return 'NO2'\r\n        case 'so2':\r\n            return 'SO2'\r\n        case 'co':\r\n            return 'CO'\r\n        default:\r\n            return title.toUpperCase()\r\n    }\r\n}\r\nexport const getDescriptionPollutant=(title:string)=>{\r\n    switch (title) {\r\n        case 'pm25':\r\n            return 'Крошечные частицы (<2.5 μm) в воздухе, которые, при вдыхании, попадают напрямую в кровь.'\r\n        case 'pm10':\r\n            return 'Крошечные частицы (<10 μm) в воздухе, которые, при вдыхании, попадают напрямую в кровь.'\r\n        case 'o3':\r\n            return 'Озон — токсичный и канцерогенный газ, влияющий на органы дыхания.'\r\n        case 'no2':\r\n            return 'Оксид азота — особо токсичен, раздражает дыхательные пути и уменьшает содержание гемоглобина в крови.'\r\n        case 'so2':\r\n            return 'Оксид серы — при длительном воздействии может нанести непоправимый вред лёгким.'\r\n        case 'co':\r\n            return 'Монооксид углерода — не имеет запаха и цвета. Симптомы отравления включают слабость, головную боль, тошноту и др.'\r\n        default:\r\n            return 'Еще нет подходящего описания для этого элемента.'\r\n    }\r\n}","import axios from \"axios\";\r\nimport { EcoCityData, EcoCityRank, EcoSearchData, UserEcoSubs } from \"../types/EcoTypes\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://showtime.app-dich.com/api/ecology/'\r\n})\r\n\r\nexport const getEcoSearchData = (searchQ?:string) =>{\r\n    return instance.post<{data:EcoSearchData}>(`search${window.location.search}`,{\r\n        searchQ\r\n    }).then(res=>res.data)\r\n    .catch(e=>e.response.data)\r\n}\r\nexport const getEcologyCity = (cityId:string) =>{\r\n    return instance.post<{data:EcoCityData} | null>(`eco-info${window.location.search}`,{\r\n        id: cityId,\r\n        target: 'city'\r\n    }).then(res=>res.data)\r\n    .catch(e=>e.response.data)\r\n}\r\nexport const getEcologyCountry = (countryId:string) =>{\r\n    return instance.post<{data:EcoCityData} | null>(`eco-info${window.location.search}`,{\r\n        id: countryId,\r\n        target: 'country'\r\n    }).then(res=>res.data)\r\n    .catch(e=>e.response.data)\r\n}\r\nexport type CityCoordinateType={\r\n    city: string,\r\n    countryName: string\r\n}\r\nexport const getCityByCoordinate = (lat:number, long:number) =>{\r\n    return axios.get<CityCoordinateType>(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${long}&localityLanguage=ru`)\r\n    .then(res=>res.data)\r\n    .catch(e=>e.response.data)\r\n}\r\nexport const getEcoRankCity = (countryId: string) =>{\r\n    return instance.post<EcoCityRank>(`rank${window.location.search}`,{\r\n        id: countryId\r\n    })\r\n    .then(res=>res.data)\r\n    .catch(e=>e.response.data)\r\n}\r\nexport const subscribeNoticification=(cityId:string)=>{\r\n    return instance.post(`subscribe${window.location.search}`,{id:cityId})\r\n}\r\nexport const unsubscribeNoticification=(cityId:string)=>{\r\n    return instance.delete(`subscribe${window.location.search}`,\r\n    {data:{id:cityId}})\r\n}\r\nexport const getSubscribes=()=>{\r\n    return instance.get<{data:UserEcoSubs[]}>(`subscribe${window.location.search}`)\r\n    .then(res=>res.data.data)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/station.8d3d0943.svg\";","import { Icon24ChevronCompactRight, Icon24ErrorCircle } from \"@vkontakte/icons\"\r\nimport { Cell } from \"@vkontakte/vkui\"\r\nimport React, { memo } from \"react\"\r\nimport {Badge} from './Badge'\r\n//@ts-ignore\r\nimport stationPNG from '../media/station.svg'\r\nimport { Icon12ErrorCircle } from '@vkontakte/icons';\r\nimport './StationItem.css'\r\n\r\ntype PropsType={\r\n    stationName: string,\r\n    value: any,\r\n    mode: 'danger' | 'okay' | 'good',\r\n    onClick?: ()=>void,\r\n    distance: number\r\n}\r\n\r\nexport const StationItem:React.FC<PropsType>=memo(({value, mode, stationName, distance})=>{\r\n    const color='bg__'+mode\r\n    return<div style={{fontSize:16, color:'#454545'}} className='w-100'>\r\n        <Cell\r\n        disabled={true}\r\n        after={<div>\r\n        <Badge value={value}  color={color} />\r\n        {/*<Icon24ChevronCompactRight fill='#C1C1C1' />*/}\r\n        </div>\r\n        }>\r\n        <div className='d-flex'>\r\n            <div className='center__y'>\r\n                <img src={stationPNG} style={{marginRight:16}} />\r\n            </div>\r\n            <div>\r\n            <div style={{fontSize:16,width:200,overflowX:'scroll'}}>\r\n                {stationName}\r\n            </div>\r\n            <div className=\"text__gray\">\r\n                \r\n                {distance>10 && <div\r\n                className='d-flex' ><div style={{height:18,marginRight:5}} className='center__y'>\r\n                    <Icon12ErrorCircle fill='C1C1C1'/>\r\n                </div><div \r\n                className='station__warning'\r\n                style={{fontSize:15,width:window.innerWidth-196}}>\r\n                    Может быть неточной</div></div>}\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </Cell>\r\n    </div>\r\n})","\r\n\r\n\r\n\r\ntype GetDistanceType = {\r\n    point1:{\r\n        latitude:number,\r\n        longitude:number\r\n    },\r\n    point2:{\r\n        latitude:number,\r\n        longitude:number\r\n    }\r\n}\r\n\r\nexport const getDistance = ({point1,point2}:GetDistanceType):number =>{\r\n\r\n    const RADIUS_EARTH = 6371\r\n    const P = Math.PI\r\n    \r\n    const distance = (((((point1.latitude-point2.latitude)**2) + ((point2.longitude-point2.longitude)**2))**0.5)/180)*P*RADIUS_EARTH \r\n\r\n    return (+(String(distance).slice(0,3)))\r\n\r\n}","import { CardGrid, Group, Panel, Div, Avatar, Card, Cell, Spacing, Header, Progress, Link, Footer, FixedLayout } from \"@vkontakte/vkui\"\r\nimport React, { ReactElement, useEffect,useRef,useState} from \"react\"\r\nimport './Home.css'\r\nimport { Icon16Place, Icon24Search } from '@vkontakte/icons';\r\nimport { Icon24NotificationOutline } from '@vkontakte/icons';\r\nimport { Icon28StoryOutline } from '@vkontakte/icons';\r\nimport { Icon24StoryOutline } from '@vkontakte/icons';\r\nimport { Icon24NotificationCheckOutline } from '@vkontakte/icons';\r\n//@ts-ignore\r\nimport logo from '../media/IQAir_logo.svg'\r\nimport { Icon24Dropdown } from '@vkontakte/icons';\r\nimport { Loader } from '../bricks/Loader'\r\nimport {ListItem} from '../bricks/ListItem'\r\nimport {PollutionItem} from '../bricks/PollutionItem'\r\nimport { WeatherItem } from \"../bricks/WeatherItem\";\r\nimport { Advice } from \"../bricks/Advice\";\r\nimport { EcoCityData, EcoCityType, EcoSearchData, EcoStation } from \"../types/EcoTypes\";\r\nimport { getDescriptionPollutant, getFullNamePollutant } from \"../utils/pollutants\";\r\nimport { getEcoSearchData } from \"../dal/api\";\r\nimport { StationItem } from \"../bricks/StationItem\";\r\nimport { getDistance } from \"../utils/getDistance\";\r\n\r\n\r\n\r\nconst LIGHT_BLUE = '#4475F1'\r\ntype PropsType={\r\n    id: string,\r\n    isGoodWind: boolean,\r\n    city: EcoCityData | null,\r\n    nativeCityId: string,\r\n    go:(modal:string)=>void,\r\n    isInit: boolean,\r\n    bgApp: string,\r\n    subscribeNoticification: ()=>void,\r\n\tunsubsubscribeNoticification: ()=>void,\r\n\tisCitySubscribed: boolean,\r\n    snackbar: ReactElement<any,any> | null,\r\n    doStory: ()=>void\r\n}\r\n\r\n\r\nexport const Home:React.FC<PropsType> = ({ id, snackbar, bgApp, isGoodWind, city, go, isInit, nativeCityId, isCitySubscribed, subscribeNoticification, unsubsubscribeNoticification, doStory }) => {\r\n\r\n    const [isShowMore,setShowMore] = useState(false)\r\n    const [isShowBigImage, setShowBigImage] = useState(false)\r\n    const [stations,setStations] = useState<EcoStation[]>([])\r\n\r\n    useEffect(()=>{\r\n        if(city){\r\n            getEcoSearchData(city.name).then((res:{data:EcoSearchData})=>{\r\n                if(res.data){\r\n                    setStations(res.data.stations)\r\n                }\r\n            })\r\n            setShowMore(false)    \r\n        }\r\n        return()=>{\r\n            setShowMore(false)\r\n        }\r\n    },[city])\r\n\r\n    const handlerOpenImage=()=>{\r\n        setShowBigImage(true)\r\n    }\r\n    const handlerCloseImage=()=>{\r\n        setShowBigImage(false)\r\n    }\r\n    const goToForecastPollutionForTheDay=()=>{\r\n        go('FORECAST_POLLUTION_FOR_THE_DAY')\r\n    }\r\n    \r\n    const stationsJSX = city ? stations.map((c,index)=><>\r\n    <StationItem \r\n    distance={getDistance({point1:c.coordinates,point2:city.coordinates})}\r\n    stationName={c.name}\r\n    key={`${index}${c.name}`}\r\n    value={c.aqi} mode={c.aqi > 100 ? 'danger' : ((c.aqi>50) ? 'okay' : 'good')} />\r\n    {(index+1)!==stations.length && <Spacing\r\n    key={`station_spacing${index}`}\r\n    className=\"spacing\" separator size={16} />}\r\n</>) : []\r\n\r\n    const pollutantsJSX = city ? city.current.pollutants.map((p,index)=><>\r\n    <PollutionItem\r\n    bgApp={bgApp}\r\n    key={`${index}${p.pollutantName}`}\r\n    title={getFullNamePollutant(p.pollutantName)}\r\n    value={p.concentration}\r\n    aqi={p.aqi}\r\n    tooltipDescription={getDescriptionPollutant(p.pollutantName)}\r\n    bar={p.aqi>100 ? 'bad_bar' : p.aqi>50 ? 'okay_bar' : 'good_bar'}\r\n    /> \r\n    {(index+1)!==city.current.pollutants.length && <Spacing \r\n    key={`pollutant_spacing${index}`}\r\n    className=\"spacing\"\r\n    separator size={32} />}\r\n    </>) : []\r\n\r\n    const currentDay = (new Date()).getDay()\r\n    const forecastsJSX = city ? city.forecasts.daily.map((c,index)=><>\r\n        <WeatherItem \r\n        key={`${index}-${c.temperature}${c.aqi}`}\r\n        onClick={goToForecastPollutionForTheDay}\r\n        day={currentDay+index+1} value={c.aqi} mode={c.aqi > 100 ? 'danger' : ((c.aqi>50) ? 'okay' : 'good')} />\r\n        {(index+1)!==city.forecasts.daily.length && <Spacing \r\n        key={`weather_spacing${index}`}\r\n        className=\"spacing\" separator size={16} />}\r\n    </>) : []\r\n    \r\n\r\n    return <Panel id={id}>\r\n        <div style={{width:'100%'}}>\r\n        <Group\r\n        style={{paddingTop:42}}\r\n        className={bgApp}\r\n        >\r\n            {isShowBigImage && \r\n            <div \r\n            onClick={handlerCloseImage}\r\n            style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                flexDirection:'column',\r\n                position:'fixed',\r\n                zIndex:1000,\r\n                width:'100%',\r\n                height:'100%'\r\n                }}>\r\n                <Loader />\r\n            </div>\r\n            }\r\n            <Div\r\n                className={(isInit ? 'bg__init card' : 'card' + ' ' + ((city && city.current.aqi<=50) ? 'home__good__weather' : (city && city.current.aqi<=100) ? 'home__okay__weather' : 'home__bad__weather'))}>\r\n                <div className='home__main__title'>\r\n                    {isInit ?  <div\r\n                    style={{height:24,width:61}}\r\n                    className='bg__init__home'></div> : <div\r\n                    style={{fontSize:24,fontWeight:'inherit',lineHeight:2.2,color:'rgba(0,0,0,0.5)'}}\r\n                    className='text__SF-Pro-Rounded-Semibold'>{city && city.current.aqi} AQI</div>}\r\n                </div>\r\n                <div className='center__x text__Inter-Medium' style={{color:'rgba(0,0,0,0.5)'}}>\r\n                    {isInit && <div \r\n                    style={{height:16, width:97, marginTop:10}}\r\n                    className='bg__init__home'></div> }\r\n                    <div \r\n                    style={{fontSize:17}}\r\n                    className='center__y'>\r\n                    {(city && nativeCityId===city.id && (!isInit)) && <Icon16Place fill='rgba(0,0,0,0.5)' style={{marginRight:3}} />}\r\n                    </div>\r\n                    {((!isInit) && city) && city.name}\r\n                </div>\r\n                <div>\r\n                    <div className='mt-4 home__main__bottom__side'>\r\n                    <div>\r\n                        <div \r\n                        className='home__search__cell__rounded home__search__cell__rounded_active'\r\n                        onClick={()=>go('POLLUTION_CITIES')}\r\n                        style={{opacity:0.5}}>\r\n                        <Avatar \r\n                        style={{backgroundColor:'rgba(255, 255, 255, 0.35)'}}\r\n                        shadow={false}>\r\n                            {(!isInit) && <Icon24Search  fill='#000' />}\r\n                        </Avatar>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className='home__main__bottom__right__side'>\r\n                        <div \r\n                        style={{opacity:0.5}}\r\n                        onClick={city ? (isCitySubscribed ? unsubsubscribeNoticification : subscribeNoticification) : ()=>{}}\r\n                        className='home__search__cell__rounded home__search__cell__rounded_active'>\r\n                        \r\n                        <Avatar \r\n                        style={{backgroundColor:'rgba(255, 255, 255, 0.35)'}}\r\n                        shadow={false}>\r\n                            {(!isInit) && (!isCitySubscribed) && <Icon24NotificationOutline fill='#000' />}\r\n                            {(!isInit) && (isCitySubscribed) && <Icon24NotificationCheckOutline fill='#000' />}\r\n                        </Avatar>\r\n                        </div>\r\n                        <div\r\n                        className='ml-1' \r\n                        style={{opacity:0.5}}\r\n                        onClick={city ? doStory : ()=>{}}\r\n                        >\r\n                        <Avatar\r\n                        className='home__search__cell__rounded home__search__cell__rounded_active' \r\n                        style={{backgroundColor:'rgba(255, 255, 255, 0.35)'}}\r\n                        shadow={false}>\r\n                            {(!isInit) && <Icon24StoryOutline fill='#000' />}\r\n                        </Avatar>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </Div>\r\n            <Div>\r\n                {(city && (!isInit)) && <Advice\r\n                bgApp={bgApp}\r\n                doStory={doStory}\r\n                pollution={city.recommendations.pollution}\r\n                isGoodWind={isGoodWind}\r\n                />}\r\n                {isInit && <Card \r\n                className='card__app'\r\n                mode='shadow'>\r\n                    <div className='d-flex'>\r\n                        <div \r\n                        className='bg__init'\r\n                        style={{height:24,width:24,borderRadius:20000}}>\r\n                        </div>\r\n                        <div className='bg__init ml-2'\r\n                        style={{height:17,width:122}}>\r\n                        </div>\r\n                    </div>\r\n                </Card>}\r\n            </Div>  \r\n            <Div>\r\n                <Header className='text__SF-Pro-Rounded-Semibold'>\r\n                    {(!isInit) ? <span className=\"text__gray unselectable\">\r\n                    ЗАГРЯЗНИТЕЛИ\r\n                    </span> : <div\r\n                    style={{height:12, width:85}}\r\n                    className='bg__init'>\r\n                    </div>}    \r\n                </Header>\r\n                <Card \r\n                mode='shadow'\r\n                className='card__app'\r\n                >\r\n                    <div\r\n                    className='card__app'>\r\n                    {(isInit) && [3,2,1,0].map((c)=><><div\r\n                    key={`pollutant${c}`}\r\n                    style={{display:'grid',gridTemplateColumns:'1fr 50px'}}>\r\n                        <div \r\n                        style={{width:91,height:17}}\r\n                        className='bg__init'>\r\n                        </div>\r\n                        <div style={{width:24,height:24,display:'flex',justifyContent:'end'}}\r\n                        className='bg__init'>\r\n                        </div></div>\r\n                        {c!==0 && <Spacing key={`pollutant_key${c}`} className=\"spacing\" separator size={32}/>}</>)} \r\n                    {(!isInit) && [...pollutantsJSX].slice(0,4)}\r\n                    {((!isShowMore) && (pollutantsJSX.length>4)) && <Cell onClick={()=>setShowMore(true)}><ListItem bgApp={bgApp} description={<Link>Показать все</Link>}>\r\n                        <Icon24Dropdown fill={LIGHT_BLUE}/>\r\n                    </ListItem></Cell>}\r\n                    {(isShowMore && (!isInit)) && <>{[...pollutantsJSX].slice(4,6)}</>}\r\n                    </div>\r\n                </Card> \r\n            </Div>\r\n            <Div>\r\n                <Header className='text__SF-Pro-Rounded-Semibold'>\r\n                    {(!isInit) ? <span className='text__gray unselectable'>\r\n                        ПРОГНОЗ НА НЕДЕЛЮ\r\n                    </span> : <div\r\n                    style={{height:12, width:85}}\r\n                    className='bg__init'>\r\n                    </div>}\r\n                </Header>\r\n                <Card  \r\n                mode='shadow'\r\n                className='card__app'>\r\n                    <div className=''>\r\n                    {(isInit) && [5,6,7,8,9,4,10].map((c)=><><div \r\n                    key={`weather${c}`}\r\n                    style={{display:'grid',gridTemplateColumns:'24px 1fr 50px', gridGap:'10px'}}>\r\n                        <div \r\n                        style={{width:24,height:24}}\r\n                        className='bg__init'>\r\n                        </div>\r\n                        <div \r\n                        style={{width:91,height:17}}\r\n                        className='bg__init'>\r\n                        </div>\r\n                        <div style={{width:52,height:24,display:'flex',justifyContent:'end'}}\r\n                        className='bg__init'>\r\n                        </div>\r\n                    </div>{c!==10 && <Spacing key={`weather_spacing${c}`} className=\"spacing\" separator size={16} />}</>)}\r\n                        {(!isInit) && forecastsJSX}\r\n                    </div>\r\n                </Card>\r\n            </Div>\r\n            {stations.length!==0 && <Div>\r\n                <Header className='text__SF-Pro-Rounded-Semibold'>\r\n                    {(!isInit) ? <span className='text__gray'>\r\n                        СТАНЦИИ\r\n                    </span> : <div\r\n                    style={{height:12, width:85}}\r\n                    className='bg__init'>\r\n                    </div>}\r\n                </Header>\r\n                <Card  \r\n                mode='shadow'\r\n                className='card__app'>\r\n                    <div className=''>\r\n                    {(isInit) && [5,6,7,8,9,4,10].map((c)=><><div \r\n                    key={`station${c}`}\r\n                    style={{display:'grid',gridTemplateColumns:'24px 1fr 50px', gridGap:'10px'}}>\r\n                        <div \r\n                        style={{width:24,height:24}}\r\n                        className='bg__init'>\r\n                        </div>\r\n                        <div \r\n                        style={{width:91,height:17}}\r\n                        className='bg__init'>\r\n                        </div>\r\n                        <div style={{width:52,height:24,display:'flex',justifyContent:'end'}}\r\n                        className='bg__init'>\r\n                        </div>\r\n                    </div>{c!==10 && <Spacing key={`station_spacing${c}}`} separator className=\"spacing\" size={16} />}</>)}\r\n                        {(!isInit) && stationsJSX}\r\n                    </div>\r\n                </Card>\r\n            </Div>}\r\n            {/*<Div>\r\n                <Header>\r\n                    <span className='text__gray'>\r\n                        ИНТЕРАКТИВНАЯ КАРТА\r\n                    </span>\r\n                </Header>\r\n                <Card mode='outline'>\r\n                    <Loader />\r\n                    <div className='home__map__bottom'>\r\n                    <div \r\n                    onClick={handlerOpenImage}\r\n                    className='home__map__button home__map__button_active'>\r\n                        <Icon24Fullscreen/>\r\n                        <div className='ml-1'>Открыть</div>\r\n                    </div>\r\n                    </div>\r\n                </Card>\r\n            </Div>*/}\r\n            <Footer style={{paddingTop:4,paddingLeft:4}}>\r\n                <Div className='text__SF-Pro-Rounded-Semibold'>\r\n                Информация предоставлена\r\n                </Div>\r\n                <Div className=\"\">\r\n                    <img src={logo} />\r\n                </Div>\r\n            </Footer>\r\n            <FixedLayout>\r\n                {snackbar}\r\n            </FixedLayout>\r\n        </Group>\r\n        </div>\r\n    </Panel>\r\n}\r\n\r\n\r\n\r\n","\r\nimport React, { Fragment } from 'react'\r\nimport { Card, Div, Group, Header, ModalPage, ModalPageHeader, PanelHeaderButton, Spacing } from '@vkontakte/vkui'\r\nimport { Icon24Dismiss } from '@vkontakte/icons'\r\nimport { Icon16Place } from '@vkontakte/icons';\r\nimport { Icon16ClockOutline } from '@vkontakte/icons';\r\nimport { Icon24Message } from '@vkontakte/icons';\r\nimport { PollutionItem } from '../bricks/PollutionItem';\r\n\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    day: number,\r\n    month: string,\r\n    city: string,\r\n    isGoodWind: boolean,\r\n    handlerClose: () => void\r\n}\r\n\r\n\r\nexport const ForecastPollutionForDay: React.FC<PropsType> = ({ day, month, city, id, handlerClose, isGoodWind }) => {\r\n    return <ModalPage\r\n        onClose={handlerClose}\r\n        header={<ModalPageHeader\r\n            right={<PanelHeaderButton onClick={handlerClose}><Icon24Dismiss /></PanelHeaderButton>}></ModalPageHeader>}\r\n        settlingHeight={100} id={id} >\r\n        <Fragment>\r\n            <Group>\r\n                <Div className='w-100 text__dark_gray'>\r\n                    <h3 className='center__x'>\r\n                        6 AQI\r\n                    </h3>\r\n                    <div className='center__x'>\r\n                        <div className='d-flex'>\r\n                            <Icon16Place style={{ marginTop: 3, marginRight: 3 }} />\r\n                            {city}\r\n                        </div>\r\n                        <div className='d-flex ml-2'>\r\n                            <Icon16ClockOutline style={{ marginTop: 3, marginRight: 3 }} />\r\n                            {day} {month}\r\n                        </div>\r\n                    </div>\r\n                </Div>\r\n                <Div>\r\n                    <Card mode='shadow'>\r\n                        <div className='d-flex text__dark_gray p-2'>\r\n                            <div className='center__y'>\r\n                                <Icon24Message />\r\n                            </div>\r\n                            <div className='ml-2'>\r\n                                {isGoodWind ? \r\n                                'Качество воздуха хорошее и соответствует требованиям ООН.'\r\n                                : 'Качество воздуха плохое и превышает требования ООН.'\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Div>\r\n\r\n                <Div>\r\n                    <Header>\r\n                        <span className=\"text__gray\">\r\n                            ЗАГРЯЗНИТЕЛИ\r\n                        </span>\r\n                    </Header>\r\n                    <Card mode='shadow'>\r\n                        <div className='p-2'>\r\n                            \r\n                        </div>\r\n                    </Card>\r\n                </Div>\r\n                <Spacing size={64}/>\r\n            </Group>\r\n        </Fragment>\r\n\r\n    </ModalPage>\r\n}","import { Cell } from '@vkontakte/vkui'\r\nimport { useEffect, useState } from 'react'\r\nimport { isKrym } from '../utils/isKrym'\r\nimport { Badge } from './Badge'\r\n\r\n\r\n\r\ntype PropsType = {\r\n    city: string,\r\n    country: string,\r\n    value?: number,\r\n    id: string,\r\n    onClick: () => void\r\n}\r\n\r\n\r\nexport const PlaceItem: React.FC<PropsType> = ({ city, country, value, onClick, id }) => {\r\n\r\n    let [bg, setBG] = useState('bg__good')\r\n    useEffect(() => {\r\n        if (value) {\r\n            if (value >= 100) {\r\n                setBG('bg__danger')\r\n            } else if (value >= 50) {\r\n                setBG('bg__okay')\r\n            } else {\r\n                setBG('bg__good')\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    return <div\r\n    onClick={onClick}\r\n    className='highlight_on_touch text__Inter-Regular' \r\n    style={{\r\n        paddingLeft:16,\r\n        paddingRight:16,\r\n        paddingBottom:4,\r\n        paddingTop:4,\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 50px'\r\n    }}>\r\n        <div>\r\n            <div style={{fontSize:16}}>\r\n                {city}\r\n            </div>\r\n            <div style={{marginTop:6,fontSize:15,color:'#606060'}}>\r\n                {isKrym(id) ? 'Россия' : country}\r\n            </div>\r\n        </div>\r\n        {value && <div className='center__y' >\r\n            <Badge color={bg} value={value} >\r\n                {value}\r\n            </Badge> \r\n        </div>}\r\n    </div>\r\n}","\r\n\r\n\r\n\r\n\r\nexport const isKrym = (cityId:string):boolean =>{\r\n    const krymsCity:string[] = [\r\n        '5bc822af41fdcdf1939e6641','5bc822af41fdcdf1939e6642',\r\n        '5bc822ae41fdcdf1939e6628','5bc822ae41fdcdf1939e660e',\r\n        '5bc822ae41fdcdf1939e662b','5bc821bd41fdcdf1939dd63e',\r\n        '5bc822a241fdcdf1939e6147','5bac90b524b967f0b5308d0f',\r\n        '5bc822ae41fdcdf1939e660e','5bac90b624b967f0b5308d12',\r\n        '5bc8229e41fdcdf1939e5f4c','5bc822a241fdcdf1939e6172',\r\n        '5bc8229d41fdcdf1939e5ee0','5bac90ab24b967f0b5308cf4',\r\n        '5bac90b624b967f0b5308d11','5bc8229c41fdcdf1939e5e72',\r\n        '5bc8229c41fdcdf1939e5e5c','5bac90b724b967f0b5308d13',\r\n        '5bc822a041fdcdf1939e5ff2','5bac90b624b967f0b5308d10',\r\n        '5bc8229f41fdcdf1939e5f88','5bc822a341fdcdf1939e61d1',\r\n        '5bc822af41fdcdf1939e667b'\r\n    ]\r\n    return krymsCity.some(k=>k===cityId)\r\n}","import { Icon12ErrorCircle, Icon24Dismiss, Icon32PlaceOutline } from \"@vkontakte/icons\"\r\nimport { Card, Cell, Div, Group, Header, Input, ModalPage, ModalPageHeader, PanelHeaderButton, Search, Spacing } from \"@vkontakte/vkui\"\r\nimport React, { ChangeEvent, Fragment, useEffect, useState } from \"react\"\r\nimport { Icon20Search } from '@vkontakte/icons';\r\nimport { ListItem } from \"../bricks/ListItem\";\r\nimport { Icon20PlaceOutline } from '@vkontakte/icons';\r\nimport { PlaceItem } from \"../bricks/PlaceItem\";\r\nimport { getEcologyCity, getEcoRankCity, getEcoSearchData } from \"../dal/api\";\r\nimport { EcoCity, EcoStation } from \"../types/EcoTypes\";\r\nimport { Formik } from \"formik\";\r\nimport { hidden } from \"chalk\";\r\n\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    countryId: string,\r\n    countryName: string,\r\n    handlerClose: () => void,\r\n    setDefaultCity: (cityId: string) => void,\r\n    onClickMyCities: () => void,\r\n    myCity: string,\r\n    myCityId: string,\r\n    bgApp: string,\r\n    isAllowedPlace: boolean,\r\n    requestPermissionLocation: () => void\r\n}\r\n\r\nexport const PollutionCities: React.FC<PropsType> = ({ id, bgApp, countryId, handlerClose, setDefaultCity, countryName, myCity, myCityId, isAllowedPlace, requestPermissionLocation }) => {\r\n\r\n    type CityType = {\r\n        id: string,\r\n        name: string,\r\n        country: string,\r\n        aqi?: number\r\n    }\r\n    const [title, setTitle] = useState('')\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.target.value)\r\n    }\r\n    const [cities, setCities] = useState<CityType[]>([])\r\n    const [clearestCities, setClearestCitites] = useState<CityType[]>([])\r\n    const [isFetching, setFetching] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setFetching(true)\r\n        getEcoSearchData(title.length > 2 ? title : countryName)\r\n            .then(res => {\r\n                const data = res.data\r\n                setCities(data.cities)\r\n                setFetching(false)\r\n            }).catch(e => {\r\n                setFetching(false)\r\n            })\r\n    }, [title])\r\n\r\n    useEffect(() => {\r\n        setFetching(true)\r\n        getEcoSearchData(countryName)\r\n            .then(res => {\r\n                const data = res.data\r\n                setCities(data.cities)\r\n\r\n                getEcoRankCity(countryId)\r\n                    .then(res => {\r\n                        const data = res.data\r\n                        setClearestCitites(data)\r\n                        setFetching(false)\r\n                    })\r\n            }).catch(e => {\r\n                setFetching(false)\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    const citiesJSX = cities.length > 0 ? cities.map((c, index) => <><div\r\n        key={c.id} className=''>\r\n        <PlaceItem\r\n            onClick={() => {\r\n                setDefaultCity(c.id)\r\n                handlerClose()\r\n            }}\r\n            city={c.name} {...c} />\r\n    </div>{(index + 1) !== cities.length && <Spacing separator className=\"spacing\" size={8} />}</>) : <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        Городов не найдено.</div>\r\n    const clearestCitiesJSX = clearestCities.length > 0 ? clearestCities.map((c, index) => <><div key={c.id} className=''>\r\n        <PlaceItem\r\n            value={c.aqi ? c.aqi : 10}\r\n            onClick={() => {\r\n                setDefaultCity(c.id)\r\n                handlerClose()\r\n            }}\r\n            city={c.name} {...c} country={countryName} />\r\n    </div>{(index + 1) !== cities.length && <Spacing className=\"spacing\" separator size={8} />}</>) : <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        Городов не найдено.</div>\r\n\r\n\r\n\r\n    return <ModalPage\r\n        settlingHeight={100}\r\n        header={<ModalPageHeader\r\n            className={bgApp === 'bg__app__light' ? 'modal__app__light' : 'modal__app__dark'}\r\n            right={\r\n                <PanelHeaderButton onClick={handlerClose}><Icon24Dismiss />\r\n                </PanelHeaderButton>} />}\r\n        id={id}\r\n    >\r\n        <Group className={bgApp}>\r\n            <div>\r\n                <Search\r\n                    value={title} onChange={handleChange}\r\n                    className={bgApp}\r\n                />\r\n            </div>\r\n            <Div>\r\n                <Card\r\n                    mode='shadow'\r\n                    className='card__app'\r\n                    style={{ padding: 0, overflow: 'hidden' }}>\r\n                    <Cell\r\n                        onClick={() => {\r\n                            if (isAllowedPlace) {\r\n                                setDefaultCity(myCityId)\r\n                                handlerClose()\r\n                            } else {\r\n                                requestPermissionLocation()\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div className='card__app'>\r\n                            {(!isFetching) && <ListItem bgApp={bgApp} description={<div>\r\n                                {isAllowedPlace ? <> <div style={{ fontSize: 16 }}>\r\n                                    {myCity}\r\n                                </div>\r\n                                    <div style={{ fontSize: 15 }} className='text__gray'>\r\n                                        <div>Текущее местоположение</div>\r\n                                        <div className=\"text__gray\">\r\n\r\n                                            <div className='d-flex'>\r\n                                                <div style={{ height: 18, marginRight: 5 }} className='center__y'>\r\n                                                    <Icon12ErrorCircle fill='C1C1C1' />\r\n                                                </div>\r\n                                                    <div\r\n                                                    style={{ fontSize: 15 }}>\r\n                                                        Может быть неточным\r\n                                                    </div>\r\n                                                </div>\r\n                                        </div>\r\n                                    </div> </> : <div\r\n                                        style={{ color: '#4475F1', fontSize: 16 }}>\r\n                                    <div>Разрешить доступ</div>\r\n                                    <div>к местоположению</div>\r\n                                </div>}\r\n                            </div>}>\r\n                                <Icon32PlaceOutline className='' fill='#4475F1' />\r\n                            </ListItem>}\r\n                            {isFetching && <ListItem\r\n                                bgApp={bgApp}\r\n                                description={<div>\r\n                                    <div\r\n                                        style={{ width: 122, height: 16 }}\r\n                                        className='bg__init'>\r\n                                    </div>\r\n                                    <div\r\n                                        style={{ width: 88, height: 12 }}\r\n                                        className='bg__init mt-1'>\r\n                                    </div>\r\n                                </div>}\r\n                            >\r\n                                <div\r\n                                    style={{ height: 24, width: 24, borderRadius: 20000 }}\r\n                                    className='bg__init'></div>\r\n                            </ListItem>}\r\n                        </div>\r\n                    </Cell>\r\n                </Card>\r\n            </Div>\r\n            <Div>\r\n                <Header className='text__SF-Pro-Rounded-Semibold'>\r\n                    {(!isFetching) ? <span className='text__gray'>\r\n                        {title.length > 0 ? \"ВСЕ\" : \"С НИЗКИМ AQI ЗА ДЕНЬ\"}\r\n                    </span> : <div\r\n                        className='bg__init' style={{ width: 85, height: 12 }}\r\n                    ></div>}\r\n                </Header>\r\n                <Card\r\n                    mode='shadow'\r\n                    className='card__app'>\r\n                    <Group>\r\n                        {(isFetching) ? (title.length > 0 ? <BgInitCities /> : <BgInitClearestCities />) : <></>}\r\n                        {(!isFetching) ? ((title.length > 0) ? citiesJSX : clearestCitiesJSX) : <></>}\r\n                    </Group>\r\n                </Card>\r\n            </Div>\r\n            <Div>\r\n                <Header className='text__SF-Pro-Rounded-Semibold'>\r\n                    {(!isFetching) ? <span className='text__gray'>\r\n                        {title.length > 0 ? \"С НИЗКИМ AQI ЗА ДЕНЬ\" : \"ВСЕ\"}\r\n                    </span> : <div\r\n                        className='bg__init' style={{ width: 85, height: 12 }}>\r\n                    </div>}\r\n                </Header>\r\n                <Card\r\n                    mode='shadow'\r\n                    className='card__app'>\r\n                    <Group>\r\n                        <Group className=''>\r\n                            {(isFetching) ? (title.length > 0 ? <BgInitClearestCities /> : <BgInitCities />) : <></>}\r\n                            {(!isFetching) ? ((title.length > 0) ? clearestCitiesJSX : citiesJSX) : <></>}\r\n                        </Group>\r\n                    </Group>\r\n                </Card>\r\n            </Div>\r\n            <Spacing size={70} />\r\n        </Group>\r\n    </ModalPage>\r\n}\r\n\r\n\r\ntype PropsClearestCitiesType = {}\r\nconst BgInitClearestCities: React.FC<PropsClearestCitiesType> = ({ }) => {\r\n\r\n    const items = [2, 3, 4, 5, 1].map(c => <><Div key={`clearCity${c}`} className='px-2'\r\n        style={{ display: 'grid', gridTemplateColumns: '1fr 50px' }}>\r\n        <div>\r\n            <div\r\n                style={{ width: 122, height: 16 }}\r\n                className='bg__init'>\r\n            </div>\r\n            <div\r\n                style={{ width: 88, height: 12 }}\r\n                className='bg__init mt-1'>\r\n            </div>\r\n        </div>\r\n        <div\r\n            style={{ width: 44, height: 24, borderRadius: 20000 }}\r\n            className='bg__init mt-1'>\r\n        </div>\r\n    </Div>{c !== 1 && <Spacing className=\"spacing\" separator size={8} />}</>)\r\n\r\n    return <>{items}</>\r\n}\r\n\r\ntype PropsBgInitCitiesType = {}\r\nconst BgInitCities: React.FC<PropsBgInitCitiesType> = ({ }) => {\r\n    const items = [2, 3, 4, 5, 1].map(c => <><Div key={`city${c}`} className='px-2'>\r\n        <div>\r\n            <div\r\n                style={{ width: 122, height: 16 }}\r\n                className='bg__init'>\r\n            </div>\r\n            <div\r\n                style={{ width: 88, height: 12 }}\r\n                className='bg__init mt-1'>\r\n            </div>\r\n        </div>\r\n    </Div>{c !== 1 && <Spacing className=\"spacing\" separator size={8} />}</>)\r\n\r\n    return <>{items}</>\r\n}","import { Cell, ModalCard } from \"@vkontakte/vkui\"\r\nimport { EcoCityData } from \"../types/EcoTypes\"\r\nimport { Icon28ChevronRightOutline } from '@vkontakte/icons';\r\nimport { Icon16Place } from '@vkontakte/icons';\r\n\r\n\r\n\r\n\r\n\r\ntype PropsType={\r\n    id: string,\r\n    handleClose: ()=>void,\r\n    cityFromSearch: EcoCityData,\r\n    cityOfUser: EcoCityData,\r\n    setCitySearch: (cityId:string)=>void,\r\n    toHome: ()=>void\r\n}\r\n\r\n\r\nexport const MyCities:React.FC<PropsType> = ({id,handleClose,cityFromSearch,cityOfUser,setCitySearch,toHome}) =>{\r\n    \r\n    \r\n    const handleCityFromSearchClick = () =>{\r\n        setCitySearch(cityFromSearch.id)\r\n        toHome()\r\n    }\r\n    const handleCityOfUserClick = () =>{\r\n        setCitySearch(cityOfUser.id)\r\n        toHome()\r\n    }\r\n\r\n    return<ModalCard \r\n    onClose={handleClose}\r\n    id={id}>\r\n        <Cell onClick={handleCityFromSearchClick}>\r\n        <div style={{display:'grid',gridTemplateColumns:'140px 28px 1fr'}}>\r\n            <div>\r\n                Город из поиска\r\n            </div>\r\n            <div className='center__x'>\r\n                <Icon28ChevronRightOutline fill='#808080'/>\r\n            </div>      \r\n            <div \r\n            style={{display:'flex',justifyContent:'end'}}>\r\n                <div style={{marginTop:2}} className='center__y'>\r\n                    <Icon16Place fill='#808080' className='mr-1' />\r\n                </div>\r\n                <div className='center__y'>\r\n                {cityFromSearch.name}\r\n                </div>\r\n            </div>     \r\n        </div>\r\n        </Cell>\r\n        <Cell onClick={handleCityOfUserClick}>\r\n        <div style={{display:'grid',gridTemplateColumns:'140px 28px 1fr'}}>\r\n            <div>\r\n                Текущее \r\n                <div>\r\n                местоположение\r\n                </div>\r\n            </div>\r\n            <div className='center__x'>\r\n                <Icon28ChevronRightOutline fill='#808080'/>\r\n            </div>      \r\n            <div \r\n            style={{display:'flex',justifyContent:'end',marginTop:2}}>\r\n                {cityOfUser.name}\r\n            </div>     \r\n        </div>\r\n        </Cell>\r\n    </ModalCard>\r\n}","import { Snackbar } from \"@vkontakte/vkui\"\r\n//@ts-ignore\r\nimport success_img from '../media/score_low.svg'\r\n//@ts-ignore\r\nimport failed_img from '../media/score_high.svg' \r\n\r\n\r\ntype PropsType = {\r\n    resultOperation: boolean,\r\n    text: string,\r\n    closeHandler?: ()=>void\r\n}\r\n\r\nexport const MySnackbar:React.FC<PropsType> = ({text,resultOperation,closeHandler}) =>{\r\n    return<Snackbar\r\n    onClose={closeHandler ? closeHandler : ()=>{}}\r\n    before={<img src={resultOperation ? success_img : failed_img} />}\r\n    >\r\n        <div \r\n        className={'text__SF-Pro-Rounded-Regular'}\r\n        style={{fontSize:15}}>\r\n            {text}\r\n        </div>\r\n    </Snackbar>\r\n}","export default __webpack_public_path__ + \"static/media/place.1a9be207.svg\";","export default __webpack_public_path__ + \"static/media/chevron_right.f01bceac.svg\";","export default __webpack_public_path__ + \"static/media/bg_okay.deb781bc.jpg\";","export default __webpack_public_path__ + \"static/media/bg_good.78cdbf75.jpg\";","export default __webpack_public_path__ + \"static/media/bg_good.c1892506.svg\";","export default __webpack_public_path__ + \"static/media/bg_bad.fcfcaf41.jpg\";","import { Button, Card, ModalCard } from \"@vkontakte/vkui\"\r\nimport { BackgroundColor } from \"chalk\";\r\nimport React from \"react\"\r\nimport { Icon56NotificationOutline } from '@vkontakte/icons';\r\n\r\n\r\n\r\n\r\ntype PropsType={\r\n    bgApp: string,\r\n    id: string,\r\n    closeHandler: ()=>void,\r\n    subscribeNoticification: ()=>void\r\n}\r\nconst LIGHT_BLUE = '#4475F1'\r\n\r\nexport const TurnNoticifications:React.FC<PropsType>=({id, subscribeNoticification, bgApp, closeHandler})=>{\r\n    return<ModalCard      \r\n    id={id}      \r\n\r\n          onClose={closeHandler}\r\n          icon={<Icon56NotificationOutline fill={LIGHT_BLUE} />}\r\n          header={<div className='text__Inter-Bold'>Включить уведомления?</div>}\r\n          subheader={<div className='text__Inter-Regular'>\r\n              Мы будем уведомлять вас об актуальном качестве воздуха\r\n              раз в неделю, а также:\r\n              <div style={{marginTop:10}}>\r\n                 - Если качество воздуха станет неприемлемым\r\n              </div>\r\n              <div style={{marginTop:5}}>\r\n                 - О резких скачках количества загрязнителей\r\n              </div>\r\n            </div>}\r\n          actions={\r\n            <Button size=\"l\" mode=\"primary\" onClick={()=>{\r\n                subscribeNoticification()\r\n                closeHandler()\r\n            }} className='text__Inter-Medium'>\r\n              Включить\r\n            </Button>\r\n          }\r\n        />\r\n}","import { AppReducerType } from \"../store\";\r\n\r\n\r\n\r\n\r\nexport const bgAppSelector = (state: AppReducerType) =>{\r\n    return state.initial.bgApp\r\n}\r\n\r\nexport const platformSelector = (state: AppReducerType) =>{\r\n    return state.initial.platform\r\n}\r\n\r\nexport const activePanelSelector = (state: AppReducerType) =>{\r\n    return state.initial.activePanel\r\n}\r\n\r\nexport const activeModalSelector = (state: AppReducerType) =>{\r\n    return state.initial.activeModal\r\n}","import { Appearance, platform } from \"@vkontakte/vkui\"\r\n\r\n\r\nconst SET_PLATFORM:'initialReducer/SET_PLATFORM'='initialReducer/SET_PLATFORM'\r\nconst SET_BG_APP:'initialReducer/SET_BG_APP'='initialReducer/SET_BG_APP'\r\nconst SET_ACTIVE_PANEL:'initialReducer/SET_ACTIVE_PANEL'='initialReducer/SET_ACTIVE_PANEL'\r\nconst SET_ACTIVE_MODAL:'initialReducer/SET_ACTIVE_MODAL'='initialReducer/SET_ACTIVE_MODAL'\r\n\r\ntype PlatformType = 'mobile' | 'pc' \r\ntype BgAppType = 'bg__app__light' | 'bg__app__dark'\r\n\r\nconst initialState = {\r\n    platform: 'mobile',\r\n    bgApp: 'bg__app__light',\r\n    activeModal: '',\r\n    activePanel: 'HOME'\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionType = (SetBgAppType | SetPlatformType | SetActiveModalType | SetActivePanelType)\r\n\r\nexport const initialReducer = (state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_PLATFORM:\r\n            return{\r\n                ...state,\r\n                platform: action.platform\r\n            }\r\n        case SET_BG_APP:\r\n            return{\r\n                ...state,\r\n                bgApp: action.bgApp\r\n            }\r\n        case SET_ACTIVE_MODAL:\r\n            return{\r\n                ...state,\r\n                activeModal: action.activeModal\r\n            }\r\n        case SET_ACTIVE_PANEL:\r\n            return{\r\n                ...state,\r\n                activePanel: action.activePanel\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetActivePanelType = {\r\n    type: typeof SET_ACTIVE_PANEL,\r\n    activePanel: string\r\n}\r\nexport const setActivePanelState = (activePanel:string):SetActivePanelType=>{\r\n    return{\r\n        type: SET_ACTIVE_PANEL,\r\n        activePanel\r\n    }\r\n}\r\n\r\ntype SetActiveModalType = {\r\n    type: typeof SET_ACTIVE_MODAL,\r\n    activeModal: string\r\n}\r\nexport const setActiveModalState = (activeModal:string):SetActiveModalType => {\r\n    return{\r\n        type: SET_ACTIVE_MODAL,\r\n        activeModal\r\n    }\r\n}\r\n\r\ntype SetPlatformType = {\r\n    type: typeof SET_PLATFORM,\r\n    platform: PlatformType\r\n}\r\nexport const  setPlatform = (platform:PlatformType):SetPlatformType =>{\r\n    return{\r\n        type: SET_PLATFORM,\r\n        platform\r\n    }\r\n}\r\n\r\ntype SetBgAppType = {\r\n    type: typeof SET_BG_APP,\r\n    bgApp: BgAppType\r\n}\r\nexport const setBgApp = (bgApp:BgAppType):SetBgAppType =>{\r\n    return{\r\n        type: SET_BG_APP,\r\n        bgApp\r\n    }\r\n}\r\n ","import { combineReducers, createStore } from \"redux\";\r\nimport { initialReducer } from \"./Reducers/initialReducer\";\r\n\r\n\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    initial: initialReducer\r\n})\r\n\r\ntype ReducersType = typeof reducers\r\nexport type AppReducerType = ReturnType<ReducersType>\r\n\r\nexport const store = createStore(reducers)\r\n\r\n\r\n","import { setActiveModalState, setActivePanelState } from \"../bll/Reducers/initialReducer\"\r\nimport { store } from \"../bll/store\"\r\n\r\n\r\n\r\nconst dispatch = store.dispatch\r\nexport const toOffline=()=>{\r\n    dispatch(setActiveModalState(''))\r\n    dispatch(setActivePanelState('OFFLINE'))\r\n}\r\n\r\nexport const toOnline=()=>{\r\n    dispatch(setActivePanelState('HOME'))\r\n    dispatch(setActiveModalState(''))\r\n}","import { FixedLayout, Group, Panel } from \"@vkontakte/vkui\"\r\nimport axios from \"axios\"\r\nimport { ReactElement, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setActiveModalState, setActivePanelState } from \"../bll/Reducers/initialReducer\"\r\nimport { MySnackbar } from \"../bricks/MySnackbar\"\r\nimport { getCityByCoordinate } from \"../dal/api\"\r\nimport { retry } from \"../utils/forImage\"\r\nimport { toOnline } from \"../utils/internetConnection\"\r\n\r\n\r\ntype PropsType = {\r\n    id:string,\r\n    image:string,\r\n}\r\n\r\nexport const NotConnection:React.FC<PropsType> = ({id,image}) =>{\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [snackbar,setSnackbar] = useState<any>(null)\r\n\r\n\r\n    return<Panel id={id}>\r\n        <Group>\r\n    <div \r\n    style={{height:window.innerHeight}}\r\n    className='center__y'>\r\n        <img src={image} />\r\n        <div \r\n        className='text__Inter-SemiBold'\r\n        style={{fontSize:20}}>\r\n        Нет подключения\r\n        </div>\r\n        <div \r\n        className='text__Inter-Regular center__x'\r\n        style={{color:'#898989',fontSize:16,marginTop:8}}\r\n        >\r\n            Проверьте соединение и повторите\r\n        </div>\r\n        <div \r\n        className='text__Inter-Regular center__x'\r\n        style={{color:'#898989',fontSize:16}}\r\n        >\r\n            попытку\r\n        </div>\r\n        <div style={{marginTop:24}}>\r\n            <button\r\n            style={{\r\n                borderRadius:10,\r\n                color:'#4475F1',\r\n                background:'rgba(68, 117, 241, 0.1)',\r\n                height:36,\r\n                width:176,\r\n                border:'none',\r\n                fontSize:15\r\n            }}\r\n            className='center__y text__SF-Pro-Rounded-Regular'\r\n            onClick={()=>{\r\n                if(navigator.onLine){\r\n                    toOnline()\r\n                }else{\r\n                    setSnackbar(<MySnackbar\r\n                        text={'Не удалось подключиться'}\r\n                        resultOperation={false}\r\n                        closeHandler={()=>setSnackbar(null)}\r\n                    />)\r\n                }\r\n            }}\r\n            >\r\n                Повторить попытку\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <FixedLayout>\r\n        {snackbar}\r\n    </FixedLayout>\r\n    </Group>\r\n</Panel>\r\n}","export default __webpack_public_path__ + \"static/media/wifi_outline_56.e7641413.svg\";","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, Panel, ScreenSpinner, AdaptivityProvider, AppRoot, ModalRoot, ConfigProvider, usePlatform, Snackbar } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Intro } from './panels/Intro';\r\nimport { Home } from './panels/Home';\r\nimport './App.css'\r\nimport { ForecastPollutionForDay } from './panels/ForecastPollutionForDay';\r\nimport { PollutionCities } from './panels/PollutionCities';\r\nimport {\r\n\tgetCityByCoordinate, getEcologyCity, getEcologyCountry,\r\n\tgetEcoSearchData, getSubscribes, subscribeNoticification, unsubscribeNoticification\r\n} from './dal/api';\r\nimport { MyCities } from './panels/MyCities';\r\nimport { MyCanvas } from './bricks/MyCanvas';\r\nimport { MySnackbar } from './bricks/MySnackbar';\r\nimport { Layer, Stage, Image, Text, Rect, FastLayer } from \"react-konva\";\r\nimport placePNG from \"./media/place.svg\";\r\nimport useImage from 'use-image';\r\nimport bg_okay from './media/bg_okay.jpg'\r\nimport bg_good from './media/bg_good.jpg'\r\nimport bg_good_svg from './media/bg_good.svg'\r\nimport bg_bad from './media/bg_bad.jpg'\r\nimport chevron_right from \"./media/chevron_right.svg\";\r\nimport { TurnNoticifications } from './panels/TurnNoticifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeModalSelector, activePanelSelector, bgAppSelector, platformSelector } from './bll/Selectors/initialSelector';\r\nimport { NotConnection } from './panels/NotConnection';\r\nimport { setActiveModalState, setActivePanelState } from './bll/Reducers/initialReducer';\r\nimport wifiImage from './media/wifi_outline_56.svg'\r\nimport { retry } from \"./utils/forImage\";\r\nimport failed_img from './media/score_high.svg'\r\n\r\n\r\n\r\nconst ROUTES = {\r\n\tINFO: 'INFO',\r\n\tPOLLUTION_CITIES: 'POLLUTION_CITIES',\r\n\tHOME: 'HOME',\r\n\tFORECAST_POLLUTION_FOR_THE_DAY: 'FORECAST_POLLUTION_FOR_THE_DAY',\r\n\tMY_CITIES: 'MY_CITIES',\r\n\tTURN_NOTICIFICATIONS: 'TURN_NOTICIFICATIONS',\r\n\tOFFLINE: 'OFFLINE'\r\n}\r\nconst STATE_KEYS = {\r\n\tIS_CHECK_INFO: 'IS_CHECK_INFO',\r\n\tIS_ALLOWED_PLACE: 'IS_ALLOWED_PLACE',\r\n\tDEFAULT_CITY_ID: 'DEFAULT_CITY_ID',\r\n\tDEFAULT_COUNTRY_NAME: 'DEFAULT_COUNTRY_NAME',\r\n\tDEFAULT_COUNTRY_ID: 'DEFAULT_COUNTRY_ID'\r\n}\r\nconst DEFAULT_CITY_ID = '5b163b6f7fa2b15e076ad2a6'\r\nconst DEFAULT_COUNTRY_ID = 'qNvxAidZLbwhRmQXR'\r\nconst DEFAULT_COUNTRY_NAME = 'Россия'\r\n\r\nconst App = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst [isInit, setInit] = useState(false)\r\n\tconst activePanel = useSelector(activePanelSelector)\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\tconst activeModal = useSelector(activeModalSelector)\r\n\tconst [snackbar, setSnackbar] = useState(null)\r\n\r\n\tconst setActivePanel = (panel) => {\r\n\t\tdispatch(setActivePanelState(panel ? panel : ''))\r\n\t}\r\n\tconst setActiveModal = (modal) => {\r\n\t\tdispatch(setActiveModalState(modal ? modal : ''))\r\n\t}\r\n\tconst [state, setState] = useState({\r\n\t\tisCheckInfo: false,\r\n\t\tisAllowedPlace: false,\r\n\t\tdefaultCityId: DEFAULT_CITY_ID,\r\n\t\tdefaultCountryId: DEFAULT_COUNTRY_ID,\r\n\t\tecoCity: null,\r\n\t\tnativeCity: null,\r\n\t\tsubscribedCities: [],\r\n\t\tdefaultCountryName: DEFAULT_COUNTRY_NAME\r\n\t})\r\n\r\n\r\n\tconst handlerCloseModal = () => {\r\n\t\tsetActiveModal(null)\r\n\t}\r\n\tconst platform = useSelector(platformSelector)\r\n\tconst bgApp = useSelector(bgAppSelector)\r\n\tuseEffect(async () => {\r\n\t\t/*bridge.subscribe(({ detail: { type, data } }) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tconst title = new RegExp('light')\t\t\t\t\r\n\t\t\t\tif((data.scheme==='vkcom') || (data.scheme.match(title))){\r\n\t\t\t\t\tsetBgApp('bg__app__light')\r\n\t\t\t\t\tif(data.scheme==='vkcom'){\r\n\t\t\t\t\t\tsetPlatform('pc')\r\n\t\t\t\t\t}else{\t\r\n\t\t\t\t\t\tsetPlatform('mobile')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#F5F5F5\"})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetBgApp('bg__app__dark')\r\n\t\t\t\t\tbridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\", \"action_bar_color\": \"#373737\"})\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});*/\r\n\t\tasync function fetchData() {\r\n\t\t\tconst res = (await bridge.send('VKWebAppStorageGet', { keys: Object.values(STATE_KEYS) }))\r\n\r\n\t\t\tlet data = res.keys\r\n\t\t\tdata.forEach((s) => {\r\n\t\t\t\tlet value = s.value ? JSON.parse(s.value) : null\r\n\t\t\t\tswitch (s.key) {\r\n\t\t\t\t\tcase STATE_KEYS.IS_CHECK_INFO:\r\n\t\t\t\t\t\tif (!value) {\r\n\t\t\t\t\t\t\tsetActiveModal(ROUTES.INFO)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetState(prev => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\tisCheckInfo: true\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase STATE_KEYS.IS_ALLOWED_PLACE:\r\n\t\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\t\tsetState(prev => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\tisAllowedPlace: true\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase STATE_KEYS.DEFAULT_COUNTRY_ID:\r\n\t\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\t\tsetState(prev => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\tdefaultCountryId: s.value\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase STATE_KEYS.DEFAULT_CITY_ID:\r\n\t\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\t\tsetState(prev => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\tdefaultCityId: s.value\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase STATE_KEYS.DEFAULT_COUNTRY_NAME:\r\n\t\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\t\tsetState(prev => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\tdefaultCountryName: s.value\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tfetchData()\r\n\t}, []);\r\n\tconst go = (modal) => {\r\n\t\tsetActiveModal(modal)\r\n\t}\r\n\tconst checkInfo = () => {\r\n\t\ttry {\r\n\t\t\tbridge.send('VKWebAppStorageSet',\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: STATE_KEYS.IS_CHECK_INFO,\r\n\t\t\t\t\tvalue: 'true'\r\n\t\t\t\t})\r\n\t\t\tsetState(prev => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tisCheckInfo: true\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\thandlerCloseModal()\r\n\t\t} catch (e) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tuseEffect(async () => {\r\n\t\tif (state.isAllowedPlace) {\r\n\t\t\ttry {\r\n\t\t\t\tsetInit(true)\r\n\t\t\t\tlet { lat, long } = await bridge.send('VKWebAppGetGeodata', { key: 'location' })\r\n\t\t\t\tconst { city } = await getCityByCoordinate(lat, long)\r\n\r\n\t\t\t\tlet id = DEFAULT_CITY_ID\r\n\t\t\t\tlet idCountry = DEFAULT_COUNTRY_ID\r\n\t\t\t\tlet defaultNameCountry = DEFAULT_COUNTRY_NAME\r\n\t\t\t\tlet cityName = city\r\n\t\t\t\tconst data = (await getEcoSearchData(cityName)).data\r\n\t\t\t\tlet currentCity = null\r\n\t\t\t\tdata.cities.forEach(item => {\r\n\t\t\t\t\tif (item.name === cityName && (!currentCity)) {\r\n\t\t\t\t\t\tid = item.id\r\n\t\t\t\t\t\tcurrentCity = item\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tconst dataCountry = (await getEcoSearchData(currentCity.country)).data\r\n\t\t\t\tdataCountry.countries.forEach(item => {\r\n\t\t\t\t\tif (item.name === currentCity.country) {\r\n\t\t\t\t\t\tidCountry = item.id\r\n\t\t\t\t\t\tdefaultNameCountry = item.name\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tbridge.send('VKWebAppStorageSet',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: STATE_KEYS.DEFAULT_COUNTRY_NAME,\r\n\t\t\t\t\t\tvalue: defaultNameCountry\r\n\t\t\t\t\t})\r\n\t\t\t\tsetState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tdefaultCountryId: defaultNameCountry\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tbridge.send('VKWebAppStorageSet',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: STATE_KEYS.DEFAULT_COUNTRY_ID,\r\n\t\t\t\t\t\tvalue: idCountry\r\n\t\t\t\t\t})\r\n\t\t\t\tsetState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tdefaultCountryId: idCountry\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tbridge.send('VKWebAppStorageSet',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: STATE_KEYS.DEFAULT_CITY_ID,\r\n\t\t\t\t\t\tvalue: id\r\n\t\t\t\t\t})\r\n\t\t\t\tsetState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tdefaultCityId: id\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsetState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tnativeCity: currentCity\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tsetInit(false)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tbridge.send('VKWebAppStorageSet',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: STATE_KEYS.DEFAULT_CITY_ID,\r\n\t\t\t\t\t\tvalue: state.defaultCityId\r\n\t\t\t\t\t})\r\n\t\t\t\tsetInit(false)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [state.isAllowedPlace])\r\n\tuseEffect(async () => {\r\n\r\n\t\tsetInit(true)\r\n\t\tconst data = (await getEcologyCity(state.defaultCityId)).data\r\n\t\tif (data) {\r\n\t\t\tsetState(prev => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tecoCity: data\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (!state.nativeCity) {\r\n\t\t\t\tsetState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tnativeCity: data\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetInit(false)\r\n\t}, [state.defaultCityId, activePanel])\r\n\r\n\tconst handlerLocationHashChange = async () => {\r\n\t\tif (window.location.hash.slice(1,)) {\r\n\t\t\tsetInit(true)\r\n\t\t\tconst data = (await getEcologyCity(window.location.hash.slice(1,))).data\r\n\t\t\tif (data) {\r\n\t\t\t\tsetState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tecoCity: data\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetInit(false)\r\n\t\t}\r\n\t}\r\n\tuseEffect(async () => {\r\n\t\thandlerLocationHashChange()\r\n\t}, [window.location.hash])\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst res = await getSubscribes()\r\n\t\tsetState(prev => {\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\tsubscribedCities: [...res]\r\n\t\t\t}\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst requestPermissionLocation = async () => {\r\n\t\tawait bridge.send('VKWebAppGetGeodata', { key: 'location' })\r\n\t\t\t.then(res => {\r\n\t\t\t\tbridge.send('VKWebAppStorageSet',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: STATE_KEYS.IS_ALLOWED_PLACE,\r\n\t\t\t\t\t\tvalue: JSON.stringify(true)\r\n\t\t\t\t\t}).then(res => {\r\n\t\t\t\t\t\tsetState(prev => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\tisAllowedPlace: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t}).catch(e => {\r\n\t\t\t\tsetState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tisAllowedPlace: true\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\tcheckInfo()\r\n\t}\r\n\r\n\r\n\r\n\tconst handleCloseForMyCities = () => {\r\n\t\tsetActiveModal(ROUTES.POLLUTION_CITIES)\r\n\t}\r\n\tconst handleOpenMyCities = () => {\r\n\t\tsetActiveModal(ROUTES.MY_CITIES)\r\n\t}\r\n\r\n\tconst ref = useRef(null)\r\n\tconst refBg = useRef(null)\r\n\r\n\tconst doStory = React.useCallback(async () => {\r\n\r\n\r\n\t\ttry {\r\n\t\t\tlet data = {}\r\n\t\t\tif (platform === 'pc') {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tbackground_type: 'image',\r\n\t\t\t\t\tblob: ref.current.toDataURL()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tbackground_type: 'none'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tawait bridge.send('VKWebAppShowStoryBox', {\r\n\t\t\t\t...data,\r\n\t\t\t\t\"stickers\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"sticker_type\": \"renderable\",\r\n\t\t\t\t\t\t\"sticker\": {\r\n\t\t\t\t\t\t\t\"can_delete\": false,\r\n\t\t\t\t\t\t\t\"content_type\": \"image\",\r\n\t\t\t\t\t\t\t\"blob\": ref.current.toDataURL(),\r\n\t\t\t\t\t\t\t\"clickable_zones\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"action_type\": \"link\",\r\n\t\t\t\t\t\t\t\t\t\"action\": {\r\n\t\t\t\t\t\t\t\t\t\t\"link\": `https://vk.com/app7991717#${state.ecoCity.id}`,\r\n\t\t\t\t\t\t\t\t\t\t\"tooltip_text_key\": \"tooltip_open_default\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"transform\": {\r\n\t\t\t\t\t\t\t\t\"gravity\": \"center\",\r\n\t\t\t\t\t\t\t\t\"relation_width\": 1\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}).catch(e => {\r\n\t\t\t\tsetSnackbar(<MySnackbar\r\n\t\t\t\t\tcloseHandler={closeSnackbarHandler}\r\n\t\t\t\t\tresultOperation={true} text={'Опубликовать историю не удалось'} />)\r\n\t\t\t}).then(res => {\r\n\t\t\t\tif (res.result) {\r\n\t\t\t\t\tsetSnackbar(<MySnackbar\r\n\t\t\t\t\t\tcloseHandler={closeSnackbarHandler}\r\n\t\t\t\t\t\tresultOperation={true} text={'История опубликована'} />)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSnackbar(<MySnackbar\r\n\t\t\t\t\t\tcloseHandler={closeSnackbarHandler}\r\n\t\t\t\t\t\tresultOperation={false} text={'Опубликовать историю не удалось'} />)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tsetSnackbar(<MySnackbar\r\n\t\t\t\tcloseHandler={closeSnackbarHandler}\r\n\t\t\t\tresultOperation={false} text={'Опубликовать историю не удалось'} />)\r\n\t\t}\r\n\t}, [ref, state.ecoCity, refBg])\r\n\tconst closeSnackbarHandler = () => {\r\n\t\tsetSnackbar(null)\r\n\t}\r\n\r\n\tconst subscribeNoticificationForButton = async () => {\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await bridge.send('VKWebAppAllowNotifications')\r\n\r\n\t\t\tif (res.result && state.ecoCity) {\r\n\t\t\t\tawait subscribeNoticification(state.ecoCity.id)\r\n\t\t\t}\r\n\r\n\t\t\tsetState(prev => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tsubscribedCities: [...prev.subscribedCities, { cityId: state.ecoCity.id }]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetSnackbar(<MySnackbar\r\n\t\t\t\tcloseHandler={closeSnackbarHandler}\r\n\t\t\t\tresultOperation={true}\r\n\t\t\t\ttext={'Уведомления включены'} />)\r\n\r\n\t\t} catch (e) {\r\n\t\t\tsetSnackbar(<MySnackbar\r\n\t\t\t\tcloseHandler={closeSnackbarHandler}\r\n\t\t\t\tresultOperation={false}\r\n\t\t\t\ttext={'Включить уведомления не удалось'} />)\r\n\t\t}\r\n\r\n\t}\r\n\tconst unsubsubscribeNoticificationForButton = async () => {\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await bridge.send('VKWebAppDenyNotifications')\r\n\r\n\t\t\tif (res.result && state.ecoCity) {\r\n\t\t\t\tawait unsubscribeNoticification(state.ecoCity.id)\r\n\t\t\t}\r\n\r\n\t\t\tsetState(prev => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\tsubscribedCities: [...prev.subscribedCities.filter(s => s.cityId !== state.ecoCity.id)]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tsetSnackbar(<MySnackbar\r\n\t\t\t\tresultOperation={true}\r\n\t\t\t\tcloseHandler={closeSnackbarHandler}\r\n\t\t\t\ttext={'Уведомления выключены'} />)\r\n\r\n\t\t} catch (e) {\r\n\t\t\tsetSnackbar(<MySnackbar\r\n\t\t\t\tcloseHandler={closeSnackbarHandler}\r\n\t\t\t\tresultOperation={false}\r\n\t\t\t\ttext={'Выключить уведомления не удалось'} />)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst modal = (\r\n\t\t<ModalRoot onClose={handlerCloseModal} activeModal={activeModal}>\r\n\t\t\t{<MyCities\r\n\t\t\t\ttoHome={handlerCloseModal}\r\n\t\t\t\tcityFromSearch={state.ecoCity}\r\n\t\t\t\tcityOfUser={state.nativeCity}\r\n\t\t\t\tsetCitySearch={(cityId) => setState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tdefaultCityId: cityId\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t\thandleClose={handleCloseForMyCities}\r\n\t\t\t\tid={ROUTES.MY_CITIES}\r\n\t\t\t/>}\r\n\t\t\t<Intro\r\n\t\t\t\tbgApp={bgApp}\r\n\t\t\t\tcheckInfo={checkInfo}\r\n\t\t\t\trequestPermissionLocation={requestPermissionLocation}\r\n\t\t\t\tid={ROUTES.INFO} handlerClose={handlerCloseModal} />\r\n\t\t\t<ForecastPollutionForDay\r\n\t\t\t\tid={ROUTES.FORECAST_POLLUTION_FOR_THE_DAY}\r\n\t\t\t\thandlerClose={handlerCloseModal}\r\n\t\t\t\tday={3} month={'Ноябрь'} city={'Санкт-Петербург'}\r\n\t\t\t/>\r\n\t\t\t<TurnNoticifications\r\n\t\t\t\tbgApp={bgApp}\r\n\t\t\t\tid={ROUTES.TURN_NOTICIFICATIONS}\r\n\t\t\t\tcloseHandler={handlerCloseModal}\r\n\t\t\t\tsubscribeNoticification={subscribeNoticificationForButton}\r\n\t\t\t/>\r\n\t\t\t<PollutionCities\r\n\t\t\t\trequestPermissionLocation={requestPermissionLocation}\r\n\t\t\t\tisAllowedPlace={state.isAllowedPlace}\r\n\t\t\t\tbgApp={bgApp}\r\n\t\t\t\tmyCityId={state.nativeCity ? state.nativeCity.id : DEFAULT_CITY_ID}\r\n\t\t\t\tmyCity={state.nativeCity ? state.nativeCity.name : 'Санкт-Петербург'}\r\n\t\t\t\tonClickMyCities={handleOpenMyCities}\r\n\t\t\t\tsetDefaultCity={(cityId) => setState(prev => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tdefaultCityId: cityId\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t\tcountryName={state.defaultCountryName}\r\n\t\t\t\tcountryId={state.defaultCountryId}\r\n\t\t\t\thandlerClose={handlerCloseModal}\r\n\t\t\t\tid={ROUTES.POLLUTION_CITIES} />\r\n\t\t</ModalRoot>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<AdaptivityProvider>\r\n\t\t\t<AppRoot popout={popout}>\r\n\t\t\t\t<View activePanel={activePanel} modal={modal}>\r\n\t\t\t\t\t<NotConnection\r\n\t\t\t\t\t\timage={wifiImage}\r\n\t\t\t\t\t\tid={ROUTES.OFFLINE} />\r\n\t\t\t\t\t<Home\r\n\t\t\t\t\t\tsnackbar={snackbar}\r\n\t\t\t\t\t\tsubscribeNoticification={() => setActiveModal(ROUTES.TURN_NOTICIFICATIONS)}\r\n\t\t\t\t\t\tunsubsubscribeNoticification={unsubsubscribeNoticificationForButton}\r\n\t\t\t\t\t\tisCitySubscribed={state.ecoCity ? state.subscribedCities.some(s => s.cityId === state.ecoCity.id) : false}\r\n\t\t\t\t\t\tbgApp={bgApp}\r\n\t\t\t\t\t\tdoStory={doStory}\r\n\t\t\t\t\t\tnativeCityId={state.nativeCity ? state.nativeCity.id : DEFAULT_CITY_ID}\r\n\t\t\t\t\t\tisInit={isInit}\r\n\t\t\t\t\t\tgo={go}\r\n\t\t\t\t\t\tcity={state.ecoCity ? state.ecoCity : null}\r\n\t\t\t\t\t\tid={ROUTES.HOME} isGoodWind={\r\n\t\t\t\t\t\t\t(state.ecoCity && state.ecoCity.current) ? (state.ecoCity.current.aqi <= 50) : true\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t</View>\r\n\t\t\t</AppRoot>\r\n\t\t\t<div id='canvas' style={{ width: 0, height: 0, opacity: 0, overflow: 'hidden' }}>\r\n\t\t\t\t<img src={wifiImage} />\r\n\t\t\t\t<img src={failed_img} />\r\n\t\t\t\t<div className='text__Inter-SemiBold'>\r\n\t\t\t\t\tInter-Semibold\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='text__Inter-Regular'>\r\n\t\t\t\t\tInter-Regular\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='text__SF-Pro-Rounded-Regular'>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Stage\r\n\t\t\t\t\twidth={253}\r\n\t\t\t\t\theight={250}\r\n\t\t\t\t\tref={refBg}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Layer>\r\n\t\t\t\t\t\t<Rect\r\n\t\t\t\t\t\t\tfill={'white'}\r\n\t\t\t\t\t\t\twidth={253}\r\n\t\t\t\t\t\t\theight={250}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Layer>\r\n\t\t\t\t</Stage>\r\n\t\t\t\t<Stage\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\twidth={1362} height={1427}\r\n\t\t\t\t>\r\n\r\n\t\t\t\t\t<Layer>\r\n\t\t\t\t\t\t<Rect\r\n\t\t\t\t\t\t\tfillLinearGradientStartPoint={{ x: 0, y: -100 }}\r\n\t\t\t\t\t\t\tfillLinearGradientEndPoint={{ x: 670, y: 1200 }}\r\n\t\t\t\t\t\t\tfillLinearGradientColorStops={(state.ecoCity && state.ecoCity.current.aqi > 100) ?\r\n\t\t\t\t\t\t\t\t[0, 'rgba(255,153,182,1)', 1, 'rgba(204,183,254,1)']\r\n\t\t\t\t\t\t\t\t: (state.ecoCity && state.ecoCity.current.aqi > 50) ? [0, '#FDCFB2', 1, '#BF8FF5']\r\n\t\t\t\t\t\t\t\t\t: [0, '#B3FF86', 1, '#EEFFC8']}\r\n\t\t\t\t\t\t\twidth={1362}\r\n\t\t\t\t\t\t\theight={1427}\r\n\t\t\t\t\t\t\tcornerRadius={118.56}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Layer>\r\n\t\t\t\t\t<Layer>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tfontFamily={'SF-Pro-Rounded-Heavy'}\r\n\t\t\t\t\t\t\ttext=\"Качество воздуха:\"\r\n\t\t\t\t\t\t\tx={254.58}\r\n\t\t\t\t\t\t\tfontSize={96}\r\n\t\t\t\t\t\t\ty={286.71}\r\n\t\t\t\t\t\t\tfill='rgba(0, 0, 0, 0.5)'\r\n\t\t\t\t\t\t\twidth={860}\r\n\t\t\t\t\t\t\theight={115}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tfontFamily={'SF-Pro-Rounded-Heavy'}\r\n\t\t\t\t\t\t\ttext={(state.ecoCity && state.ecoCity.current.aqi > 100) ? \"Плохое\" : (state.ecoCity && state.ecoCity.current.aqi > 50) ? 'Неплохое' : \"Хорошее\"}\r\n\t\t\t\t\t\t\tx={(state.ecoCity && state.ecoCity.current.aqi > 100) ? 340 : (state.ecoCity && state.ecoCity.current.aqi > 50) ? 240 : 269.58} //53.5\r\n\t\t\t\t\t\t\tfontSize={188}\r\n\t\t\t\t\t\t\ty={421.71}\r\n\t\t\t\t\t\t\tfill='rgba(0, 0, 0, 0.5)'\r\n\t\t\t\t\t\t\twidth={1000}//146\r\n\t\t\t\t\t\t\theight={224}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tfontFamily={'SF-Pro-Rounded-Regular'}\r\n\t\t\t\t\t\t\ttext={(state.ecoCity ? state.ecoCity.name : 'SPb')}\r\n\t\t\t\t\t\t\tx={(1362 - (state.ecoCity ? (state.ecoCity.name.length * 45) : 10)) / 2}\r\n\t\t\t\t\t\t\tfontSize={99}\r\n\t\t\t\t\t\t\ty={755}\r\n\t\t\t\t\t\t\tfill='rgba(0, 0, 0, 0.5)'\r\n\t\t\t\t\t\t\twidth={1000}\r\n\t\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Rect\r\n\t\t\t\t\t\t\tx={231}\r\n\t\t\t\t\t\t\ty={1084}\r\n\t\t\t\t\t\t\twidth={901}\r\n\t\t\t\t\t\t\tfill={'rgba(255,255,255,0.45)'}\r\n\t\t\t\t\t\t\theight={220}\r\n\t\t\t\t\t\t\tcornerRadius={165.98}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\ttext={'Узнать больше'}\r\n\t\t\t\t\t\t\twidth={631}\r\n\t\t\t\t\t\t\theight={102}\r\n\t\t\t\t\t\t\tx={311}\r\n\t\t\t\t\t\t\tfontSize={84}\r\n\t\t\t\t\t\t\tfontFamily={'SF-Pro-Rounded-Regular'}\r\n\t\t\t\t\t\t\tfill='rgba(0, 0, 0, 0.5)'\r\n\t\t\t\t\t\t\ty={1153}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PlaceImage x={(1362 - (state.ecoCity ? state.ecoCity.name.length * 45 : 10) - 140) / 2} />\r\n\t\t\t\t\t\t<ChevronRight />\r\n\t\t\t\t\t</Layer>\r\n\r\n\t\t\t\t</Stage>\r\n\t\t\t</div>\r\n\t\t</AdaptivityProvider>\r\n\t);\r\n}\r\n\r\nconst BgGood = () => {\r\n\tconst [image] = useImage(bg_good_svg);\r\n\treturn <Image\r\n\t\twidth={253}\r\n\t\theight={250}\r\n\t\timage={image} />;\r\n}\r\n\r\nconst PlaceImage = ({ x }) => {\r\n\tconst [image] = useImage(placePNG);\r\n\treturn <Image\r\n\t\tx={x}\r\n\t\ty={762.15}\r\n\t\timage={image} />;\r\n};\r\n\r\nconst ChevronRight = () => {\r\n\tconst [image] = useImage(chevron_right);\r\n\treturn <Image\r\n\t\tx={1005.8}\r\n\t\ty={1167.05}\r\n\t\timage={image} />;\r\n}\r\n\r\nconst BgImage = ({ aqi }) => {\r\n\tconst [image] = useImage(aqi > 100 ? bg_bad : aqi > 50 ? bg_okay : bg_good)\r\n\treturn <Image\r\n\t\timage={image}\r\n\t/>\r\n}\r\n\r\nexport default App;\r\n","import bridge from \"@vkontakte/vk-bridge\";\r\nimport { setBgApp, setPlatform } from \"../bll/Reducers/initialReducer\";\r\nimport { store } from \"../bll/store\";\r\n\r\n\r\nconst dispatch = store.dispatch\r\ntype DataType = {scheme:string}\r\nexport const subscribeVkBridge = async () => {\r\n    bridge.subscribe(({ detail }) => {\r\n        const {type, data} = detail\r\n        if (type === 'VKWebAppUpdateConfig') {\r\n            const schemeAttribute = document.createAttribute('scheme');\r\n            //@ts-ignore\r\n            schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n            const title = new RegExp('light')\t\t\t\t\r\n            //@ts-ignore\r\n            if((data.scheme.match(title)) || data.scheme.match(new RegExp('vkcom'))){\r\n                dispatch(setBgApp('bg__app__light'))\r\n                //@ts-ignore\r\n                bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\", \"action_bar_color\": \"#F5F5F5\"})\r\n            }else{\r\n                dispatch(setBgApp('bg__app__dark'))\r\n                bridge.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#343434\"})\r\n            }\r\n\r\n            //@ts-ignore\r\n            if(window.location.href.match(new RegExp('vk_platform=mobile_web')) || data.scheme.match(new RegExp('vkcom'))){\r\n                dispatch(setPlatform('pc'))\r\n            }else{\r\n                dispatch(setPlatform('mobile'))\r\n            }\r\n\r\n            document.body.attributes.setNamedItem(schemeAttribute);\r\n        }\r\n    })}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./bll/store\";\r\nimport { subscribeVkBridge } from \"./utils/initialVkBridge\";\r\nimport { toOffline, toOnline } from \"./utils/internetConnection\";\r\nimport wifiImage from './media/wifi_outline_56.svg'\r\nimport { retry } from \"./utils/forImage\";\r\n \r\n// Init VK  Mini App\r\nsubscribeVkBridge()\r\nbridge.send(\"VKWebAppInit\");\r\n\r\n//Check internet connection\r\nwindow.addEventListener('offline',toOffline)\r\nwindow.addEventListener('online',toOnline)\r\n\r\n\r\nconst AppContainer = () =>{\r\n  return<Provider store = {store}>\r\n    <App/>\r\n  </Provider>\r\n}\r\nReactDOM.render(<AppContainer />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}